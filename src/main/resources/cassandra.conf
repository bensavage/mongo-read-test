akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "com.ben.MySerializable" = jackson-cbor
    }
  }

  remote.artery {
    canonical.port = 2552
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = [
      "akka://Testing@127.0.0.1:2552",
    ]
    roles = ["write-model", "read-model"]
  }

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    #journal.plugin = "akka-contrib-mongodb-persistence-journal"
    #snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  contrib.persistence.mongodb.mongo {
    mongouri = "mongodb://localhost:27017/test"
  }

}

cassandra-journal {
  contact-points = ["localhost"]
  port = 9042
  events-by-tag {
    bucket-size = "Hour"
    flush-interval = 50ms
    pubsub-notification = on
    refresh-interval = 5s
  }
}

cassandra-snapshot-store {
  contact-points = ["localhost"]
  port = 9042
}

cassandra-query-journal {
  first-time-bucket = "20200115T00:00"
  events-by-tag.eventual-consistency-delay = 200ms
}

event-processor {
  id = "EventProcessor"
  keep-alive-interval = 2 seconds
  tag-prefix = "tag"
  parallelism = 4
}